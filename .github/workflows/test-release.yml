name: Test and release

# Run the workflow when a Pull Request is opened or when changes are pushed to main on 'xdy/xdy-pf2e-workbench' (i.e. don't run on forks)
on:
  pull_request:
  push:
    branches: [ main ]

#TODO Parse out these, for now they're hardcoded.
env:
  fvtt_minimum: 11.314
  fvtt_verified: 11.315
  fvtt_maximum: 11

jobs:
  release:
    # Only release on push to main on xdy/xdy-pf2e-workbench
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

        # Not sure this is the right way to do it, but, eh, it works.
      - name: Pull & update submodules recursively
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote

      - uses: stefanzweifel/git-auto-commit-action@v5.0.0
        with:
          commit_message: "chore: Update submodules"

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install
        run: npm install

      - name: install fvtt cli
        id: fvtt-install
        run: npm install -g @foundryvtt/foundryvtt-cli

      - name: Build packs
        run: npm run build:packs

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # - name: get-npm-version
      #   id: package-version
      #   uses: martinbeentjes/npm-get-version-action@v1.3.1

      # - name: Submit package to FoundryVTT Package Release API
      #   run: |
      #     curl -X POST "https://api.foundryvtt.com/_api/packages/release_version/" \
      #       -H "Content-Type: application/json" \
      #       -H "Authorization: ${{ secrets.FOUNDRYVTT_RELEASE_TOKEN }}" \
      #       -d '{
      #         "id": "xdy-pf2e-workbench",
      #         "dry-run": false,
      #         "release": {
      #           "version": "${{ steps.package-version.outputs.current-version}}",
      #           "manifest": "https://github.com/${{ github.repository }}/releases/latest/download/module.json",
      #           "notes": "https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md",
      #           "compatibility": {
      #             "minimum": "${{ env.fvtt_minimum }}",
      #             "verified": "${{ env.fvtt_verified }}"
      #           }
      #         }
      #       }'
